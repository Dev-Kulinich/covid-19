{"version":3,"sources":["components/img/search.svg","components/table/styled.js","components/table/index.js","components/wrapper/index.js","components/legend/styled.js","components/legend/index.js","components/map/styled.js","components/map/index.js","App.js","reportWebVitals.js","index.js"],"names":["_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSearch","_ref","svgRef","title","titleId","props","fill","xmlns","viewBox","width","height","ref","id","d","ForwardRef","Table","styled","div","Guide","Header","ColumTableItem","is_active","value","Info","Country","Triangle","reverse","Search","ReactComponent","SearchBox","searchCountryMenu","CovidTable","useState","setReverse","setSearchCountryMenu","userCountry","setUserCountry","activeValue","setActiveValue","data","useContext","UserSelectedApi","newDataArray","deleteComma","useCallback","str","result","split","forEach","el","push","join","useMemo","firstSource","arr","obj","test","slice","makeReversCountry","a","b","rev","reverseData","string","sort","renderCountryStat","array","filter","toLowerCase","includes","map","moment","format","onClickSendValue","event","getAttribute","style","color","onClick","e","type","placeholder","onChange","Wrapper","section","ModalWindow","Button","button","WrapperLegend","Legend","HoverInfo","MapCountries","info","setInfo","countriesData","properties","transformLongNameCoun","word","res","toUpperCase","setTotalCase","geoObj","obj_","Country_text","admin","total_case","renderPolygon","state","coordinates","geometry","item","Polygon","pathOptions","fillColor","fillOpacity","weight","opacity","dashArray","positions","eventHandlers","mouseover","layer","setStyle","bringToFront","country","total","mouseout","className","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","undefined","React","createContext","App","userApi","setUserApi","setData","useEffect","fetch","then","json","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0301679d.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 21 3 C 11.621094 3 4 10.621094 4 20 C 4 29.378906 11.621094 37 21 37 C 24.710938 37 28.140625 35.804688 30.9375 33.78125 L 44.09375 46.90625 L 46.90625 44.09375 L 33.90625 31.0625 C 36.460938 28.085938 38 24.222656 38 20 C 38 10.621094 30.378906 3 21 3 Z M 21 5 C 29.296875 5 36 11.703125 36 20 C 36 28.296875 29.296875 35 21 35 C 12.703125 35 6 28.296875 6 20 C 6 11.703125 12.703125 5 21 5 Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.1d36a3eb.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\r\n\r\nimport { ReactComponent } from \"../img/search.svg\";\r\n\r\nexport const Table = styled.div`\r\n  width: 890px;\r\n  height: 490px;\r\n  background: #d1d2d2;\r\n  position: relative;\r\n  left: 0;\r\n  top: 0;\r\n  margin: 0 0 20px;\r\n`;\r\n\r\nexport const Guide = styled.div`\r\n  width: fit-content;\r\n  height: 40px;\r\n  padding: 15px;\r\n  position: absolute;\r\n  top: -47px;\r\n  left: -10px;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  width: 890px;\r\n  height: 40px;\r\n  padding-left: 20px;\r\n  color: #fff;\r\n  font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n  background: rgb(11, 104, 24);\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(11, 104, 24, 1) 0%,\r\n    rgba(9, 121, 31, 1) 38%,\r\n    rgba(22, 213, 60, 1) 100%\r\n  );\r\n  > div {\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    width: 120px;\r\n    &:first-child {\r\n      width: 70px;\r\n      margin-right: 140px;\r\n      height: fit-content;\r\n      text-align: left;\r\n    }\r\n    &:last-child {\r\n      width: 160px;\r\n      cursor: default;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ColumTableItem = styled.div`\r\n  color: ${(props) => (props.is_active === props.value ? \"yellow\" : \"white\")};\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: fit-content;\r\n  height: 450px;\r\n  overflow-y: scroll;\r\n  &::-webkit-scrollbar {\r\n    background: rgba(22, 213, 60, 1) 100%;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background: #fff;\r\n    height: 60px;\r\n  }\r\n  > div {\r\n    &:nth-child(odd) {\r\n      background: #afb2af;\r\n    }\r\n    > div {\r\n      height: 30px;\r\n      display: flex;\r\n      align-items: center;\r\n      color: #0c1e0b;\r\n      font-weight: normal;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Country = styled(Header)`\r\n  width: 873px;\r\n  background: initial;\r\n  > div {\r\n    &:first-child {\r\n      width: 210px;\r\n      margin-right: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Triangle = styled.div`\r\n  position: absolute;\r\n  left: 170px;\r\n  top: 15px;\r\n  width: 0;\r\n  height: 0;\r\n  border-width: 0 10px 16px 10px;\r\n  border-color: transparent transparent #fff transparent;\r\n  border-style: solid;\r\n  cursor: pointer;\r\n  transform: ${(props) => (props.reverse ? \"rotateX(180deg)\" : \"none\")};\r\n`;\r\n\r\nexport const Search = styled(ReactComponent)`\r\n  position: absolute;\r\n  left: 125px;\r\n  top: 10px;\r\n  width: 23px;\r\n  height: fit-content;\r\n  cursor: pointer;\r\n  path {\r\n    fill: #fff;\r\n  }\r\n`;\r\n\r\nexport const SearchBox = styled.div`\r\n  display: ${(props) => (props.searchCountryMenu ? \"flex\" : \"none\")};\r\n  position: absolute;\r\n  justify-content: center;\r\n  left: 45px;\r\n  top: -55px;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  width: 190px;\r\n  height: 50px;\r\n  background: #fff;\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    transform: rotateX(180deg);\r\n    top: 44px;\r\n    left: 80px;\r\n    display: block;\r\n    border-width: 0 10px 20px 10px;\r\n    border-color: transparent transparent #fff transparent;\r\n    border-style: solid;\r\n  }\r\n  > input {\r\n    width: fit-content;\r\n    height: 35px;\r\n    border: 1px solid green;\r\n    border-radius: 2px;\r\n  }\r\n`;\r\n","import React, { useState, useCallback, useMemo, useContext } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  Header,\r\n  Info,\r\n  Country,\r\n  Table,\r\n  Triangle,\r\n  Search,\r\n  SearchBox,\r\n  ColumTableItem,\r\n  Guide,\r\n} from \"./styled\";\r\nimport { UserSelectedApi } from \"../../App\";\r\n\r\nexport const CovidTable = () => {\r\n  const [reverse, setReverse] = useState(true);\r\n  const [searchCountryMenu, setSearchCountryMenu] = useState(false);\r\n  const [userCountry, setUserCountry] = useState([]);\r\n  const [activeValue, setActiveValue] = useState(\"Total Cases_text\");\r\n\r\n  const data = useContext(UserSelectedApi);\r\n  const newDataArray = [];\r\n\r\n  const deleteComma = useCallback((str) => {\r\n    let result = [];\r\n    str.split(\"\").forEach((el) => (el !== \",\" ? result.push(el) : null));\r\n    return +result.join(\"\");\r\n  }, []);\r\n\r\n  useMemo(() => {\r\n    if (data.firstSource) {\r\n      data.arr.forEach((obj) => {\r\n        for (let key in obj) {\r\n          if (\r\n            /\\,/.test(obj[key]) ||\r\n            /\\+/.test(obj[key]) ||\r\n            (/\\d/.test(obj[key]) && obj[key].length <= 3)\r\n          ) {\r\n            obj[key] = deleteComma(obj[key]);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      data.arr.forEach((obj) => {\r\n        for (let key in obj) {\r\n          if (key === \"country\" && obj[key] === \"United Kingdom\") {\r\n            obj[\"Country_text\"] = \"UK\";\r\n            delete obj[key];\r\n          } else if (key === \"country\" && obj[key] === \"US\") {\r\n            obj[\"Country_text\"] = \"USA\";\r\n            delete obj[key];\r\n          } else if (key === \"country\") {\r\n            obj[\"Country_text\"] = obj[key];\r\n            delete obj[key];\r\n          } else if (key === \"confirmed_daily\") {\r\n            obj[\"New Cases_text\"] = obj[key];\r\n            delete obj[key];\r\n          } else if (key === \"deaths_daily\") {\r\n            obj[\"New Deaths_text\"] = obj[key];\r\n            delete obj[key];\r\n          } else if (key === \"confirmed\") {\r\n            obj[\"Total Cases_text\"] = obj[key];\r\n            delete obj[key];\r\n          } else if (key === \"deaths\") {\r\n            obj[\"Total Deaths_text\"] = obj[key];\r\n            delete obj[key];\r\n          } else if (key === \"date\") {\r\n            obj[\"Last Update\"] = obj[key].slice(0, 10) + \" 00:00\";\r\n            delete obj[key];\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  if (!data.firstSource) {\r\n    data.arr.forEach((obj) => {\r\n      if (obj[\"Last Update\"] === \"2020-04-27 00:00\") {\r\n        newDataArray.push(obj);\r\n      }\r\n    });\r\n  }\r\n\r\n  const makeReversCountry = useCallback((a, b, rev, str) => {\r\n    return rev ? (a[str] > b[str] ? -1 : 1) : a[str] > b[str] ? 1 : -1;\r\n  }, []);\r\n\r\n  const reverseData = useCallback(\r\n    (string) => {\r\n      if (data.firstSource) {\r\n        return data.arr\r\n          .slice(1, data.arr.length - 1)\r\n          .sort((a, b) => makeReversCountry(a, b, reverse, string));\r\n      } else {\r\n        return newDataArray.sort((a, b) =>\r\n          makeReversCountry(a, b, reverse, string)\r\n        );\r\n      }\r\n    },\r\n    [data, reverse]\r\n  );\r\n\r\n  const renderCountryStat = useCallback(\r\n    (array = []) =>\r\n      array\r\n        .filter((obj) => {\r\n          if (userCountry == \"\") {\r\n            return obj;\r\n          } else if (obj[\"Country_text\"].toLowerCase().includes(userCountry)) {\r\n            return obj;\r\n          }\r\n        })\r\n        .map((obj) => (\r\n          <Country key={obj[\"_id\"] || obj[\"Country_text\"]}>\r\n            <div>{obj[\"Country_text\"]}</div>\r\n            <div>\r\n              {obj[\"New Cases_text\"] == 0 ? \"no info\" : obj[\"New Cases_text\"]}\r\n            </div>\r\n            <div>\r\n              {obj[\"New Deaths_text\"] == 0 ? \"no info\" : obj[\"New Deaths_text\"]}\r\n            </div>\r\n            <div>\r\n              {obj[\"Total Cases_text\"] == 0\r\n                ? \"no info\"\r\n                : obj[\"Total Cases_text\"]}\r\n            </div>\r\n            <div>\r\n              {obj[\"Total Deaths_text\"] == 0\r\n                ? \"no info\"\r\n                : obj[\"Total Deaths_text\"]}\r\n            </div>\r\n            <div>\r\n              {obj[\"Last Update\"] == null\r\n                ? \"no info\"\r\n                : moment(obj[\"Last Update\"]).format(\"DD MMM YYYY - HH:mm\")}\r\n            </div>\r\n          </Country>\r\n        )),\r\n    [userCountry]\r\n  );\r\n\r\n  const onClickSendValue = useCallback((event) => {\r\n    return setActiveValue(event.target.getAttribute(\"value\"));\r\n  }, []);\r\n\r\n  return (\r\n    <Table>\r\n      <Guide>\r\n        <p>\r\n          The <b>active</b> source and column is{\" \"}\r\n          <b style={{ color: \"#d9d91f\" }}>yellow</b>. You can change it. Just{\" \"}\r\n          <b>click</b> on the one that interests you\r\n        </p>\r\n      </Guide>\r\n      <Header>\r\n        <ColumTableItem\r\n          value={\"Country_text\"}\r\n          onClick={(e) => onClickSendValue(e)}\r\n          is_active={activeValue}\r\n        >\r\n          Country\r\n        </ColumTableItem>\r\n        <ColumTableItem\r\n          value={\"New Cases_text\"}\r\n          onClick={(e) => onClickSendValue(e)}\r\n          is_active={activeValue}\r\n        >\r\n          New Cases\r\n        </ColumTableItem>\r\n        <ColumTableItem\r\n          value={\"New Deaths_text\"}\r\n          onClick={(e) => onClickSendValue(e)}\r\n          is_active={activeValue}\r\n        >\r\n          New Deaths\r\n        </ColumTableItem>\r\n        <ColumTableItem\r\n          value={\"Total Cases_text\"}\r\n          onClick={(e) => onClickSendValue(e)}\r\n          is_active={activeValue}\r\n        >\r\n          Total Cases\r\n        </ColumTableItem>\r\n        <ColumTableItem\r\n          value={\"Total Deaths_text\"}\r\n          onClick={(e) => onClickSendValue(e)}\r\n          is_active={activeValue}\r\n        >\r\n          Total Deaths\r\n        </ColumTableItem>\r\n        <div>Last Update</div>\r\n      </Header>\r\n      <Triangle reverse={reverse} onClick={() => setReverse(!reverse)} />\r\n      <Search onClick={() => setSearchCountryMenu(!searchCountryMenu)} />\r\n      <SearchBox searchCountryMenu={searchCountryMenu}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          onChange={(event) => setUserCountry(event.target.value.toLowerCase())}\r\n        />\r\n      </SearchBox>\r\n      <Info>{renderCountryStat(reverseData(activeValue))}</Info>\r\n    </Table>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const ModalWindow = styled.div`\r\n  width: 400px;\r\n  height: 100px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 2px solid black;\r\n  border-radius: 10px;\r\n  margin: 0 auto;\r\n  background: #aedeba;\r\n  > h5 {\r\n    margin: 0 0 10px;\r\n  }\r\n  > div {\r\n    display: flex;\r\n    justify-content: center;\r\n    > button {\r\n      &:last-child {\r\n        margin-right: 0;\r\n      }\r\n      &:hover {\r\n        background: #16d53c;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 140px;\r\n  height: 30px;\r\n  margin-right: 40px;\r\n  border-radius: 5px;\r\n  font-size: 15px;\r\n  border: none;\r\n  background: #09791f;\r\n  box-shadow: 7px 5px 5px 0px rgba(0, 0, 0, 0.61);\r\n  color: ${(props) => (props.is_active === props.value ? \"yellow\" : \"white\")};\r\n  cursor: pointer;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const WrapperLegend = styled.div`\r\n  width: 230px;\r\n  height: 230px;\r\n  padding: 7px 0 10px 10px;\r\n  background: #e0e4e0;\r\n  position: absolute;\r\n  right: 5px;\r\n  bottom: 20px;\r\n  z-index: 999;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  border-radius: 10px;\r\n\r\n  > div {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    margin-bottom: 7px;\r\n    position: relative;\r\n    margin-left: 35px;\r\n    &::after {\r\n      content: \"\";\r\n      display: block;\r\n      width: 25px;\r\n      border: 1px solid grey;\r\n      border-radius: 3px;\r\n      height: 20px;\r\n      position: absolute;\r\n      top: 0;\r\n      left: -35px;\r\n      background-color: var(--color);\r\n    }\r\n  }\r\n`;\r\n","import { useContext } from \"react\";\r\n\r\nimport { WrapperLegend } from \"./styled\";\r\nimport { UserSelectedApi } from \"../../App\";\r\n\r\nexport const Legend = () => {\r\n  const data = useContext(UserSelectedApi);\r\n\r\n  return data.firstSource ? (\r\n    <WrapperLegend>\r\n      <div style={{ \"--color\": \"#FFEDA0\" }}>0 - 10000</div>\r\n      <div style={{ \"--color\": \"#FED976\" }}>10000 - 50000</div>\r\n      <div style={{ \"--color\": \"#FEB24C\" }}>50000 - 100000</div>\r\n      <div style={{ \"--color\": \"#FD8D3C\" }}>100000 - 500000</div>\r\n      <div style={{ \"--color\": \"#FC4E2A\" }}>500000 - 1000000</div>\r\n      <div style={{ \"--color\": \"#E31A1C\" }}>1000000 - 5000000</div>\r\n      <div style={{ \"--color\": \"#BD0026\" }}>5000000 - 30000000</div>\r\n      <div style={{ \"--color\": \"#800026\" }}>more 30000000</div>\r\n    </WrapperLegend>\r\n  ) : (\r\n    <WrapperLegend>\r\n      <div style={{ \"--color\": \"#FFEDA0\" }}>0 - 500</div>\r\n      <div style={{ \"--color\": \"#FED976\" }}>500 - 2000</div>\r\n      <div style={{ \"--color\": \"#FEB24C\" }}>2000 - 10000</div>\r\n      <div style={{ \"--color\": \"#FD8D3C\" }}>10000 - 50000</div>\r\n      <div style={{ \"--color\": \"#FC4E2A\" }}>50000 - 100000</div>\r\n      <div style={{ \"--color\": \"#E31A1C\" }}>100000 - 200000</div>\r\n      <div style={{ \"--color\": \"#BD0026\" }}>200000 - 500000</div>\r\n      <div style={{ \"--color\": \"#800026\" }}>more 500000</div>\r\n    </WrapperLegend>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const HoverInfo = styled.div`\r\n  width: 265px;\r\n  height: fit-content;\r\n  background: #e0e4e0;\r\n  position: absolute;\r\n  padding: 7px 0 5px 10px;\r\n  right: 5px;\r\n  top: 15px;\r\n  z-index: 999;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  border-radius: 10px;\r\n  > h3 {\r\n    color: red;\r\n  }\r\n  > p {\r\n    margin: 0;\r\n    color: grey;\r\n    font-size: 14px;\r\n  }\r\n  > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    > div {\r\n      text-align: left;\r\n      font-size: 14px;\r\n      &:first-child {\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { MapContainer, TileLayer, Polygon } from \"react-leaflet\";\r\nimport { useCallback, useMemo, useState, useContext, useEffect } from \"react\";\r\n\r\nimport * as countriesData from \"../../data/countries.json\";\r\nimport \"../../App.css\";\r\nimport { Legend } from \"../legend\";\r\nimport { HoverInfo } from \"./styled\";\r\nimport { UserSelectedApi } from \"../../App\";\r\n\r\nexport const MapCountries = () => {\r\n  const [info, setInfo] = useState(null);\r\n\r\n  const data = useContext(UserSelectedApi);\r\n\r\n  useMemo(() => {\r\n    countriesData.features.forEach((obj) => {\r\n      for (let key in obj.properties)\r\n        if (key !== \"admin\") {\r\n          delete obj.properties[key];\r\n        }\r\n    });\r\n  }, [countriesData.features]);\r\n\r\n  const transformLongNameCoun = useCallback((word) => {\r\n    let res = [];\r\n    word.split(\" \").forEach((el) => {\r\n      if (el.slice(0, 1) === el.slice(0, 1).toUpperCase()) {\r\n        res.push(el.slice(0, 1));\r\n      }\r\n    });\r\n    return res.join(\"\");\r\n  }, []);\r\n\r\n  const setTotalCase = useCallback(\r\n    (array = [], geoObj) => {\r\n      return array.forEach((obj_) => {\r\n        if (\r\n          obj_.Country_text === geoObj.properties.admin ||\r\n          obj_.Country_text === transformLongNameCoun(geoObj.properties.admin)\r\n        ) {\r\n          geoObj.properties.total_case = obj_[\"Total Cases_text\"];\r\n        }\r\n      });\r\n    },\r\n    [data]\r\n  );\r\n\r\n  useMemo(() => {\r\n    if (data.firstSource) {\r\n      countriesData.features.forEach((obj) => {\r\n        setTotalCase(data.arr, obj);\r\n      });\r\n    } else {\r\n      countriesData.features.forEach((obj) => {\r\n        obj.properties.total_case = 0;\r\n        setTotalCase(data.arr, obj);\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  const renderPolygon = useMemo(\r\n    () =>\r\n      countriesData.features.map((state) => {\r\n        let coordinates;\r\n        if (state.geometry.type === \"MultiPolygon\") {\r\n          coordinates = state.geometry.coordinates.map((item) =>\r\n            item.map((el) => el.map((data) => [data[1], data[0]]))\r\n          );\r\n        } else {\r\n          coordinates = state.geometry.coordinates[0].map((item) => [\r\n            item[1],\r\n            item[0],\r\n          ]);\r\n        }\r\n\r\n        function getColor(value) {\r\n          if (data.firstSource) {\r\n            return value > 30000000\r\n              ? \"#800026\"\r\n              : value > 5000000\r\n              ? \"#BD0026\"\r\n              : value > 1000000\r\n              ? \"#E31A1C\"\r\n              : value > 500000\r\n              ? \"#FC4E2A\"\r\n              : value > 100000\r\n              ? \"#FD8D3C\"\r\n              : value > 50000\r\n              ? \"#FEB24C\"\r\n              : value > 10000\r\n              ? \"#FED976\"\r\n              : \"#FFEDA0\";\r\n          } else {\r\n            return value > 500000\r\n              ? \"#800026\"\r\n              : value > 200000\r\n              ? \"#BD0026\"\r\n              : value > 100000\r\n              ? \"#E31A1C\"\r\n              : value > 50000\r\n              ? \"#FC4E2A\"\r\n              : value > 10000\r\n              ? \"#FD8D3C\"\r\n              : value > 2000\r\n              ? \"#FEB24C\"\r\n              : value > 500\r\n              ? \"#FED976\"\r\n              : \"#FFEDA0\";\r\n          }\r\n        }\r\n\r\n        return (\r\n          <Polygon\r\n            key={state.properties.admin}\r\n            pathOptions={{\r\n              fillColor: getColor(state.properties.total_case),\r\n              fillOpacity: 0.7,\r\n              weight: 2,\r\n              opacity: 1,\r\n              dashArray: 3,\r\n              color: \"white\",\r\n            }}\r\n            positions={coordinates}\r\n            eventHandlers={{\r\n              mouseover: (event) => {\r\n                let layer = event.target;\r\n                layer.setStyle({ weight: 4, dashArray: \"\", color: \"#666\" });\r\n                layer.bringToFront();\r\n                setInfo({\r\n                  country: state.properties.admin,\r\n                  total: state.properties.total_case,\r\n                });\r\n              },\r\n              mouseout: (event) => {\r\n                let layer = event.target;\r\n                layer.setStyle({\r\n                  weight: 2,\r\n                  dashArray: \"3\",\r\n                  color: \"white\",\r\n                });\r\n                setInfo(null);\r\n              },\r\n            }}\r\n          />\r\n        );\r\n      }),\r\n    [data]\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <MapContainer\r\n        center={[50.358079, 30.598151]}\r\n        zoom={2}\r\n        scrollWheelZoom={true}\r\n      >\r\n        <TileLayer\r\n          attribution='<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>'\r\n          url=\"https://api.maptiler.com/maps/basic/256/{z}/{x}/{y}.png?key=vn4Q36WSJHbNNiQFkE7F\"\r\n        />\r\n        <Legend />\r\n        <HoverInfo>\r\n          <h3>Statistics Covid-19</h3>\r\n          {info === null ? (\r\n            <p>Move the mouse over the country</p>\r\n          ) : (\r\n            <div>\r\n              <div>{info.country}</div>\r\n              <div>\r\n                Total cases:{\" \"}\r\n                {info.total === 0 || info.total === undefined ? (\r\n                  <span>\r\n                    <b>no info</b>\r\n                  </span>\r\n                ) : (\r\n                  <span>\r\n                    <b>{info.total}</b> peoples\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </HoverInfo>\r\n        {renderPolygon}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport { CovidTable } from \"./components/table/index\";\r\nimport { Wrapper, ModalWindow, Button } from \"./components/wrapper/index\";\r\nimport { MapCountries } from \"./components/map/index\";\r\n\r\nexport const UserSelectedApi = React.createContext();\r\n\r\nfunction App() {\r\n  const [userApi, setUserApi] = useState(\"https://covid-19.dataflowkit.com/v1\");\r\n  const [data, setData] = useState({ arr: [], firstSource: null });\r\n\r\n  useEffect(() => {\r\n    fetch(`${userApi}`)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        userApi === \"https://covid-19.dataflowkit.com/v1\"\r\n          ? setData({ arr: json, firstSource: true })\r\n          : setData({ arr: json, firstSource: false });\r\n      });\r\n  }, [userApi]);\r\n\r\n  return (\r\n    <UserSelectedApi.Provider value={data}>\r\n      <h2>Global Covid-19 statistics</h2>\r\n      <ModalWindow>\r\n        <h5>\r\n          You can change the source of information about the Covid-19 by\r\n          countrys\r\n        </h5>\r\n        <div>\r\n          <Button\r\n            value={\"https://covid-19.dataflowkit.com/v1\"}\r\n            onClick={(e) => setUserApi(e.target.value)}\r\n            is_active={userApi}\r\n          >\r\n            First source\r\n          </Button>\r\n          <Button\r\n            value={\r\n              \"https://webhooks.mongodb-stitch.com/api/client/v2.0/app/covid-19-qppza/service/REST-API/incoming_webhook/countries_summary?min_date=2020-04-22T00:00:00.000Z&max_date=2020-04-27T00:00:00.000Z\"\r\n            }\r\n            onClick={(e) => setUserApi(e.target.value)}\r\n            is_active={userApi}\r\n          >\r\n            Second source\r\n          </Button>\r\n        </div>\r\n      </ModalWindow>\r\n      <Wrapper>\r\n        <CovidTable />\r\n        <MapCountries />\r\n      </Wrapper>\r\n    </UserSelectedApi.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}